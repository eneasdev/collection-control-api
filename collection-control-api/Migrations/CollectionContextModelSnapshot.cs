// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using collection_control_api;

namespace collection_control_api.Migrations
{
    [DbContext(typeof(CollectionContext))]
    partial class CollectionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ItemLoan", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "LoanId");

                    b.HasIndex("LoanId");

                    b.ToTable("ItemLoan");
                });

            modelBuilder.Entity("collection_control_api.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("collection_control_api.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleasedYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("items");
                });

            modelBuilder.Entity("collection_control_api.Entities.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("loans");
                });

            modelBuilder.Entity("collection_control_api.Entities.Book", b =>
                {
                    b.HasBaseType("collection_control_api.Entities.Item");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PagesNumber")
                        .HasColumnType("int");

                    b.ToTable("books");
                });

            modelBuilder.Entity("collection_control_api.Entities.Cd", b =>
                {
                    b.HasBaseType("collection_control_api.Entities.Item");

                    b.Property<string>("Singer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SongsNumber")
                        .HasColumnType("int");

                    b.ToTable("cds");
                });

            modelBuilder.Entity("collection_control_api.Entities.Dvd", b =>
                {
                    b.HasBaseType("collection_control_api.Entities.Item");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Staring")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("dvds");
                });

            modelBuilder.Entity("ItemLoan", b =>
                {
                    b.HasOne("collection_control_api.Entities.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("collection_control_api.Entities.Loan", null)
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("collection_control_api.Entities.Loan", b =>
                {
                    b.HasOne("collection_control_api.Entities.Client", "Client")
                        .WithMany("Loan")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("collection_control_api.Entities.Book", b =>
                {
                    b.HasOne("collection_control_api.Entities.Item", null)
                        .WithOne()
                        .HasForeignKey("collection_control_api.Entities.Book", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("collection_control_api.Entities.Cd", b =>
                {
                    b.HasOne("collection_control_api.Entities.Item", null)
                        .WithOne()
                        .HasForeignKey("collection_control_api.Entities.Cd", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("collection_control_api.Entities.Dvd", b =>
                {
                    b.HasOne("collection_control_api.Entities.Item", null)
                        .WithOne()
                        .HasForeignKey("collection_control_api.Entities.Dvd", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("collection_control_api.Entities.Client", b =>
                {
                    b.Navigation("Loan");
                });
#pragma warning restore 612, 618
        }
    }
}
